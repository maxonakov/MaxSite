{"version":3,"sources":["../../node_modules/micromodal/dist/micromodal.es.js","../../node_modules/domready/ready.js","searchwp-modal-form.js"],"names":["MicroModal","FOCUSABLE_ELEMENTS","Modal","constructor","targetModal","triggers","onShow","onClose","openTrigger","closeTrigger","disableScroll","disableFocus","awaitCloseAnimation","awaitOpenAnimation","debugMode","modal","document","getElementById","config","length","registerTriggers","onClick","bind","onKeydown","filter","Boolean","forEach","trigger","addEventListener","event","showModal","activeElement","setAttribute","classList","add","scrollBehaviour","addEventListeners","handler","removeEventListener","setFocusToFirstNode","closeModal","removeEventListeners","focus","remove","closeModalById","toggle","body","querySelector","Object","assign","style","overflow","height","target","hasAttribute","preventDefault","keyCode","maintainFocus","getFocusableNodes","nodes","querySelectorAll","Array","focusableNodes","contains","focusedItemIndex","indexOf","shiftKey","activeModal","generateTriggerMap","triggerAttr","triggerMap","attributes","value","undefined","push","validateModalPresence","id","console","warn","validateTriggerPresence","validateArgs","init","options","key","show","close","$el","select","showing","closers","currentTarget","getAttribute","obj","window","jQuery","el","closer"],"mappings":"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","file":"searchwp-modal-form.js","sourceRoot":"../src","sourcesContent":["const MicroModal = (() => {\n\n  const FOCUSABLE_ELEMENTS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])'];\n\n  class Modal {\n    constructor({\n      targetModal,\n      triggers = [],\n      onShow = () => {},\n      onClose = () => {},\n      openTrigger = 'data-micromodal-trigger',\n      closeTrigger = 'data-micromodal-close',\n      disableScroll = false,\n      disableFocus = false,\n      awaitCloseAnimation = false,\n      awaitOpenAnimation = false,\n      debugMode = false\n    }) {\n      // Save a reference of the modal\n      this.modal = document.getElementById(targetModal); // Save a reference to the passed config\n\n      this.config = {\n        debugMode,\n        disableScroll,\n        openTrigger,\n        closeTrigger,\n        onShow,\n        onClose,\n        awaitCloseAnimation,\n        awaitOpenAnimation,\n        disableFocus // Register click events only if pre binding eventListeners\n\n      };\n      if (triggers.length > 0) this.registerTriggers(...triggers); // pre bind functions for event listeners\n\n      this.onClick = this.onClick.bind(this);\n      this.onKeydown = this.onKeydown.bind(this);\n    }\n    /**\n     * Loops through all openTriggers and binds click event\n     * @param  {array} triggers [Array of node elements]\n     * @return {void}\n     */\n\n\n    registerTriggers(...triggers) {\n      triggers.filter(Boolean).forEach(trigger => {\n        trigger.addEventListener('click', event => this.showModal(event));\n      });\n    }\n\n    showModal() {\n      this.activeElement = document.activeElement;\n      this.modal.setAttribute('aria-hidden', 'false');\n      this.modal.classList.add('is-open');\n      this.scrollBehaviour('disable');\n      this.addEventListeners();\n\n      if (this.config.awaitOpenAnimation) {\n        const handler = () => {\n          this.modal.removeEventListener('animationend', handler, false);\n          this.setFocusToFirstNode();\n        };\n\n        this.modal.addEventListener('animationend', handler, false);\n      } else {\n        this.setFocusToFirstNode();\n      }\n\n      this.config.onShow(this.modal, this.activeElement);\n    }\n\n    closeModal() {\n      const modal = this.modal;\n      this.modal.setAttribute('aria-hidden', 'true');\n      this.removeEventListeners();\n      this.scrollBehaviour('enable');\n\n      if (this.activeElement) {\n        this.activeElement.focus();\n      }\n\n      this.config.onClose(this.modal);\n\n      if (this.config.awaitCloseAnimation) {\n        this.modal.addEventListener('animationend', function handler() {\n          modal.classList.remove('is-open');\n          modal.removeEventListener('animationend', handler, false);\n        }, false);\n      } else {\n        modal.classList.remove('is-open');\n      }\n    }\n\n    closeModalById(targetModal) {\n      this.modal = document.getElementById(targetModal);\n      if (this.modal) this.closeModal();\n    }\n\n    scrollBehaviour(toggle) {\n      if (!this.config.disableScroll) return;\n      const body = document.querySelector('body');\n\n      switch (toggle) {\n        case 'enable':\n          Object.assign(body.style, {\n            overflow: '',\n            height: ''\n          });\n          break;\n\n        case 'disable':\n          Object.assign(body.style, {\n            overflow: 'hidden',\n            height: '100vh'\n          });\n          break;\n\n        default:\n      }\n    }\n\n    addEventListeners() {\n      this.modal.addEventListener('touchstart', this.onClick);\n      this.modal.addEventListener('click', this.onClick);\n      document.addEventListener('keydown', this.onKeydown);\n    }\n\n    removeEventListeners() {\n      this.modal.removeEventListener('touchstart', this.onClick);\n      this.modal.removeEventListener('click', this.onClick);\n      document.removeEventListener('keydown', this.onKeydown);\n    }\n\n    onClick(event) {\n      if (event.target.hasAttribute(this.config.closeTrigger)) {\n        this.closeModal();\n        event.preventDefault();\n      }\n    }\n\n    onKeydown(event) {\n      if (event.keyCode === 27) this.closeModal(event);\n      if (event.keyCode === 9) this.maintainFocus(event);\n    }\n\n    getFocusableNodes() {\n      const nodes = this.modal.querySelectorAll(FOCUSABLE_ELEMENTS);\n      return Array(...nodes);\n    }\n\n    setFocusToFirstNode() {\n      if (this.config.disableFocus) return;\n      const focusableNodes = this.getFocusableNodes();\n      if (focusableNodes.length) focusableNodes[0].focus();\n    }\n\n    maintainFocus(event) {\n      const focusableNodes = this.getFocusableNodes(); // if disableFocus is true\n\n      if (!this.modal.contains(document.activeElement)) {\n        focusableNodes[0].focus();\n      } else {\n        const focusedItemIndex = focusableNodes.indexOf(document.activeElement);\n\n        if (event.shiftKey && focusedItemIndex === 0) {\n          focusableNodes[focusableNodes.length - 1].focus();\n          event.preventDefault();\n        }\n\n        if (!event.shiftKey && focusedItemIndex === focusableNodes.length - 1) {\n          focusableNodes[0].focus();\n          event.preventDefault();\n        }\n      }\n    }\n\n  }\n  /**\n   * Modal prototype ends.\n   * Here on code is responsible for detecting and\n   * auto binding event handlers on modal triggers\n   */\n  // Keep a reference to the opened modal\n\n\n  let activeModal = null;\n  /**\n   * Generates an associative array of modals and it's\n   * respective triggers\n   * @param  {array} triggers     An array of all triggers\n   * @param  {string} triggerAttr The data-attribute which triggers the module\n   * @return {array}\n   */\n\n  const generateTriggerMap = (triggers, triggerAttr) => {\n    const triggerMap = [];\n    triggers.forEach(trigger => {\n      const targetModal = trigger.attributes[triggerAttr].value;\n      if (triggerMap[targetModal] === undefined) triggerMap[targetModal] = [];\n      triggerMap[targetModal].push(trigger);\n    });\n    return triggerMap;\n  };\n  /**\n   * Validates whether a modal of the given id exists\n   * in the DOM\n   * @param  {number} id  The id of the modal\n   * @return {boolean}\n   */\n\n\n  const validateModalPresence = id => {\n    if (!document.getElementById(id)) {\n      console.warn(`MicroModal: \\u2757Seems like you have missed %c'${id}'`, 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'ID somewhere in your code. Refer example below to resolve it.');\n      console.warn(`%cExample:`, 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', `<div class=\"modal\" id=\"${id}\"></div>`);\n      return false;\n    }\n  };\n  /**\n   * Validates if there are modal triggers present\n   * in the DOM\n   * @param  {array} triggers An array of data-triggers\n   * @return {boolean}\n   */\n\n\n  const validateTriggerPresence = triggers => {\n    if (triggers.length <= 0) {\n      console.warn(`MicroModal: \\u2757Please specify at least one %c'micromodal-trigger'`, 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'data attribute.');\n      console.warn(`%cExample:`, 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', `<a href=\"#\" data-micromodal-trigger=\"my-modal\"></a>`);\n      return false;\n    }\n  };\n  /**\n   * Checks if triggers and their corresponding modals\n   * are present in the DOM\n   * @param  {array} triggers   Array of DOM nodes which have data-triggers\n   * @param  {array} triggerMap Associative array of modals and their triggers\n   * @return {boolean}\n   */\n\n\n  const validateArgs = (triggers, triggerMap) => {\n    validateTriggerPresence(triggers);\n    if (!triggerMap) return true;\n\n    for (var id in triggerMap) validateModalPresence(id);\n\n    return true;\n  };\n  /**\n   * Binds click handlers to all modal triggers\n   * @param  {object} config [description]\n   * @return void\n   */\n\n\n  const init = config => {\n    // Create an config object with default openTrigger\n    const options = Object.assign({}, {\n      openTrigger: 'data-micromodal-trigger'\n    }, config); // Collects all the nodes with the trigger\n\n    const triggers = [...document.querySelectorAll(`[${options.openTrigger}]`)]; // Makes a mappings of modals with their trigger nodes\n\n    const triggerMap = generateTriggerMap(triggers, options.openTrigger); // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateArgs(triggers, triggerMap) === false) return; // For every target modal creates a new instance\n\n    for (var key in triggerMap) {\n      let value = triggerMap[key];\n      options.targetModal = key;\n      options.triggers = [...value];\n      activeModal = new Modal(options); // eslint-disable-line no-new\n    }\n  };\n  /**\n   * Shows a particular modal\n   * @param  {string} targetModal [The id of the modal to display]\n   * @param  {object} config [The configuration object to pass]\n   * @return {void}\n   */\n\n\n  const show = (targetModal, config) => {\n    const options = config || {};\n    options.targetModal = targetModal; // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateModalPresence(targetModal) === false) return; // stores reference to active modal\n\n    activeModal = new Modal(options); // eslint-disable-line no-new\n\n    activeModal.showModal();\n  };\n  /**\n   * Closes the active modal\n   * @param  {string} targetModal [The id of the modal to close]\n   * @return {void}\n   */\n\n\n  const close = targetModal => {\n    targetModal ? activeModal.closeModalById(targetModal) : activeModal.closeModal();\n  };\n\n  return {\n    init,\n    show,\n    close\n  };\n})();\n\nexport default MicroModal;\n","/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  if (typeof module != 'undefined') module.exports = definition()\n  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n  else this[name] = definition()\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\n\n  if (!loaded)\n  doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener)\n    loaded = 1\n    while (listener = fns.shift()) listener()\n  })\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn)\n  }\n\n});\n","import MicroModal from \"micromodal\";\nimport domready from \"domready\";\n\nMicroModal.init({\n  onShow: function(modal) {\n    let $el = modal.querySelectorAll('[name=\"s\"]')[0];\n    $el.focus();\n    $el.select();\n  }\n});\n\ndomready(function() {\n  // We're implementing our own click handlers for opening/closing modals so\n  // we have a bit more control over how the events execute (e.g. preventing default)\n  let showing = \"\";\n  let triggers = document.querySelectorAll(\"[data-searchwp-modal-trigger]\");\n  let closers = document.querySelectorAll(\"[data-searchwp-modal-form-close]\");\n\n  triggers.forEach(function(trigger) {\n    trigger.addEventListener(\n      \"click\",\n      function(event) {\n        event.preventDefault();\n        let modal = event.currentTarget.getAttribute(\n          \"data-searchwp-modal-trigger\"\n        );\n        showing = modal;\n        MicroModal.show(modal, {\n          onShow: function(obj) {\n            if (window.jQuery) {\n              jQuery('body').trigger('searchwpModalOnShow', {\n                modal: modal,\n                el: jQuery('#' + modal),\n                obj: obj\n              });\n            }\n          },\n          onClose: function(obj) {\n            if (window.jQuery) {\n              jQuery('body').trigger('searchwpModalOnClose', {\n                modal: modal,\n                el: jQuery('#' + modal),\n                obj: obj\n              });\n            }\n          }\n        });\n      },\n      false\n    );\n  });\n\n  closers.forEach(function(closer) {\n    closer.addEventListener(\n      \"click\",\n      function(event) {\n        if (\n          event.target.hasAttribute(\"data-searchwp-modal-form-close\")\n        ) {\n          event.preventDefault();\n          MicroModal.close(showing);\n          showing = \"\";\n        }\n      },\n      true\n    );\n  });\n});\n"]}